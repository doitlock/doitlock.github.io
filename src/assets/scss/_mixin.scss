@charset "utf-8";

// IR
@mixin blind {
    display: block;
    position: absolute;
    overflow: hidden;
    visibility: hidden;
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
    line-height: 1px;
    font-size: 1px;
    border: 0;
    clip: rect(0 0 0 0);
    clip: rect(0, 0, 0, 0);
    pointer-events: none;
}

// ellipsis
@mixin ellipsis($line: 1) {
    @if $line ==1 {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @else {
        display: -webkit-box;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: $line;
    }
}

// 반응형
@mixin mobile {
    @media (max-width:#{$tablet - 1}) {
        @content;
    }
}

@mixin web {
    @media (min-width:#{$tablet}) {
        @content;
    }
}

@mixin web-l {
    @media (min-width:#{$web}) {
        @content;
    }
}

// scroll-x
@mixin scroll-x {
    width: calc(100% + 3.6rem);
    max-width: unset;
    overflow: auto;
    padding-bottom: 1.6rem;
    padding-right: 1.8rem;
    padding-left: 1.8rem;
    margin-left: -1.8rem;
    &::-webkit-scrollbar {
        height: 0.5rem;
    }
    &::-webkit-scrollbar-thumb {
        background-color: #D5D4D9;
        border-radius: 5rem;
    }
    &::-webkit-scrollbar-track {
        margin-left: 1.8rem;
        margin-right: 1.8rem;
        border-radius: 5rem;
    }
}

// scroll-y
@mixin scroll-y {
    overflow-x: hidden;
    overflow-y: auto;
    &::-webkit-scrollbar {
        width: 0.5rem;
    }
    &::-webkit-scrollbar-thumb {
        background-color: #D5D4D9;
        border-radius: 5rem;
    }
}

// before, after
@mixin content($dir) {
    @if $dir == 'b' or $dir == 'before' {
        &::before {
            content: '';
            @content;
        }
    }@else if $dir == 'a' or $dir == 'after' {
        &::after {
            content: '';
            @content;
        }
    }
}

// 배경
// 배경이미지, x축, y축, 배경색, 가로크기, 세로크기
@mixin bg($file, $x:null, $y:null, $bg:null, $w:null, $h:null) {
    background: url(#{$url}#{$file}) no-repeat $x $y $bg;
    background-size: $w $h;
}

// 버튼크기
@each $cls, $pad, $h, $fs in $btnsize {
    .btn.#{$cls} {
        padding:0 rem($pad);
        height:rem($h);
        font-size: rem($fs);
        border:1px solid;
        border-radius: rem(5);
    }
}

// 버튼색상
@each $cls, $border, $bg, $c in $btncolor {
    .btn.#{$cls} {
        border-color:$border;
        background-color: $bg;
        color:$c;
    }
}

// 버튼 아이콘
@each $cls, $dir, $w, $h, $ml, $bg in $btnicon {
    .btn.ico#{$cls}{
        @if $dir == 'a' {
            @include content(a){
                width: rem($w);
                height: rem($h);
                margin-left: rem($ml);
                @include bg(#{$bg},0,0,null, cover);
            }
        }@else if $dir == 'b'{
            @include content(b){
                width: rem($w);
                height: rem($h);
                margin-right: rem($ml);
                @include bg(#{$bg},0,0,null,cover);
            }
        }
    }
}

// 뱃지
@each $cls, $pad, $h, $fs in $badgesize {
    .badge.#{$cls} {
        padding:0 rem($pad);
        height:rem($h);
        font-size: rem($fs);
        border:1px solid;
        box-sizing: border-box;
        border-radius: rem(8);
    }
}
// 뱃지색상
@each $cls, $border, $bg, $c in $badgecolor {
    .badge.#{$cls} {
        border-color:$border;
        background-color: $bg;
        color:$c;
    }
}

// 모서리둥근
@each $i in $radius {
    .btn.ra#{$i},
    .badge.ra#{$i} {
        border-radius: rem($i);
    }
}